@model ASLBarcoding.Models.Sample

@{
    ViewBag.Title = "Details";
}

<h2>Sample Details</h2>


@{
    if (ViewBag.Message != null)
    {
        <div class="bs-component">
            <div class="alert alert-dismissible alert-danger">
                <button type="button" class="close" data-dismiss="alert">×</button>
                <h4>Warning!</h4>
                <p>@Html.Encode(ViewBag.Message)</p>
            </div>
        </div> 
    }
}


@using (Html.BeginForm("ExportDetails", "Samples", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    <div class="form-group">
        @Html.DropDownList("labeltype", new SelectListItem[]{
                new SelectListItem() {Text = "Barcode 51mm x 19mm", Value="Barcode51x19mm"},
                new SelectListItem() {Text = "Barcode 25mm x 13mm", Value="Barcode25x13mm"},
                new SelectListItem() {Text = "Select Label Type", Value=""}}, new { @class = "form-control" })
        @Html.TextBox("copies", ViewBag.CurrentFilter as string, new { @class = "form-control input-mini", placeholder = "No. of Barcode Label Copies ...", pattern = "\\d*" })
    </div>;
    
    <input class="btn btn-success" type="button" id="printButton2" name="btnSubmit" value="Print Labels!" onclick="if (confirm('Print labels?')) { printLocally(); }" />
    <input class="btn btn-warning" type="submit" id="downloadButton" name="downloadSubmit" value="Export to Template" onclick="if (confirm('Export now?')) { return true; }" />
}

<div>
   
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.SampleNo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SampleNo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Barcode)
        </dt>

        <dd>
            @if (ViewBag.barcode != null)
            {
                var imageUrl = Convert.ToBase64String((byte[])ViewBag.barcode);
                <img src="data:image/jpg;base64,@imageUrl" />
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Request.WorkorderNo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Request.WorkorderNo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Request.Client)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Request.Client.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Request.SampleType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Request.SampleType.Name)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<script src="~/Scripts/DYMO.Label.Framework.1.2.6.latest.js"></script>
<script src="~/Scripts/labelsSample.js"></script>
